Index.PACKAGES = {"com.github.pandafolks" : [], "com.github.pandafolks.panda" : [], "com" : [], "com.github.pandafolks.panda.loadbalancer" : [{"name" : "com.github.pandafolks.panda.loadbalancer.ConsistentHashingState", "shortDescription" : "", "members_class" : [{"label" : "notifyAboutRemoveInternal", "tail" : "(item: Participant): Task[Unit]", "member" : "com.github.pandafolks.panda.loadbalancer.ConsistentHashingState.notifyAboutRemoveInternal", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#notifyAboutRemoveInternal(item:com.github.pandafolks.panda.participant.Participant):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "notifyAboutAddInternal", "tail" : "(item: Participant): Task[Unit]", "member" : "com.github.pandafolks.panda.loadbalancer.ConsistentHashingState.notifyAboutAddInternal", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#notifyAboutAddInternal(item:com.github.pandafolks.panda.participant.Participant):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "remove", "tail" : "(participant: Participant): Unit", "member" : "com.github.pandafolks.panda.loadbalancer.ConsistentHashingState.remove", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#remove(participant:com.github.pandafolks.panda.participant.Participant):Unit", "kind" : "def"}, {"label" : "add", "tail" : "(participant: Participant): Unit", "member" : "com.github.pandafolks.panda.loadbalancer.ConsistentHashingState.add", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#add(participant:com.github.pandafolks.panda.participant.Participant):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(group: Group, requestedPosition: Int): Option[Participant]", "member" : "com.github.pandafolks.panda.loadbalancer.ConsistentHashingState.get", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#get(group:com.github.pandafolks.panda.routes.Group,requestedPosition:Int):Option[com.github.pandafolks.panda.participant.Participant]", "kind" : "def"}, {"member" : "com.github.pandafolks.panda.loadbalancer.ConsistentHashingState#<init>", "error" : "unsupported entity"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "com.github.pandafolks.panda.loadbalancer.ConsistentHashingState.scheduler", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#scheduler:monix.execution.Scheduler", "kind" : "implicit val"}, {"label" : "notifyAboutRemove", "tail" : "(items: Iterable[Participant]): Task[Unit]", "member" : "com.github.pandafolks.panda.utils.listener.QueueBasedChangeListener.notifyAboutRemove", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#notifyAboutRemove(items:scala.collection.immutable.Iterable[T]):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "notifyAboutAdd", "tail" : "(items: Iterable[Participant]): Task[Unit]", "member" : "com.github.pandafolks.panda.utils.listener.QueueBasedChangeListener.notifyAboutAdd", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#notifyAboutAdd(items:scala.collection.immutable.Iterable[T]):monix.eval.Task[Unit]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/pandafolks\/panda\/loadbalancer\/ConsistentHashingState.html", "kind" : "class"}, {"name" : "com.github.pandafolks.panda.loadbalancer.HashLoadBalancerImpl", "shortDescription" : "", "members_class" : [{"label" : "route", "tail" : "(request: Request[Task], requestedPath: Path, group: Group): Task[Response[Task]]", "member" : "com.github.pandafolks.panda.loadbalancer.HashLoadBalancerImpl.route", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#route(request:org.http4s.Request[monix.eval.Task],requestedPath:org.http4s.Uri.Path,group:com.github.pandafolks.panda.routes.Group):monix.eval.Task[org.http4s.Response[monix.eval.Task]]", "kind" : "def"}, {"member" : "com.github.pandafolks.panda.loadbalancer.HashLoadBalancerImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/pandafolks\/panda\/loadbalancer\/HashLoadBalancerImpl.html", "kind" : "class"}, {"name" : "com.github.pandafolks.panda.loadbalancer.LoadBalancer", "object" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html", "members_object" : [{"label" : "noAvailableInstanceLog", "tail" : "(requestedPath: Path, group: Group, logger: Logger): Task[Response[Task]]", "member" : "com.github.pandafolks.panda.loadbalancer.LoadBalancer.noAvailableInstanceLog", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#noAvailableInstanceLog(requestedPath:org.http4s.Uri.Path,group:com.github.pandafolks.panda.routes.Group,logger:org.slf4j.Logger):monix.eval.Task[org.http4s.Response[monix.eval.Task]]", "kind" : "def"}, {"label" : "notReachedAnyInstanceLog", "tail" : "(requestedPath: Path, group: Group, logger: Logger): Task[Response[Task]]", "member" : "com.github.pandafolks.panda.loadbalancer.LoadBalancer.notReachedAnyInstanceLog", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#notReachedAnyInstanceLog(requestedPath:org.http4s.Uri.Path,group:com.github.pandafolks.panda.routes.Group,logger:org.slf4j.Logger):monix.eval.Task[org.http4s.Response[monix.eval.Task]]", "kind" : "def"}, {"label" : "fillRequestWithParticipant", "tail" : "(request: Request[Task], participant: Participant, requestedPath: Path): Request[Task]", "member" : "com.github.pandafolks.panda.loadbalancer.LoadBalancer.fillRequestWithParticipant", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#fillRequestWithParticipant(request:org.http4s.Request[monix.eval.Task],participant:com.github.pandafolks.panda.participant.Participant,requestedPath:org.http4s.Uri.Path):org.http4s.Request[monix.eval.Task]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "route", "tail" : "(request: Request[Task], requestedPath: Path, group: Group): Task[Response[Task]]", "member" : "com.github.pandafolks.panda.loadbalancer.LoadBalancer.route", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/LoadBalancer.html#route(request:org.http4s.Request[monix.eval.Task],requestedPath:org.http4s.Uri.Path,group:com.github.pandafolks.panda.routes.Group):monix.eval.Task[org.http4s.Response[monix.eval.Task]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.pandafolks.panda.loadbalancer.RandomLoadBalancerImpl", "shortDescription" : "The load balancer tries to hit all available participants.", "members_class" : [{"label" : "route", "tail" : "(request: Request[Task], requestedPath: Path, group: Group): Task[Response[Task]]", "member" : "com.github.pandafolks.panda.loadbalancer.RandomLoadBalancerImpl.route", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#route(request:org.http4s.Request[monix.eval.Task],requestedPath:org.http4s.Uri.Path,group:com.github.pandafolks.panda.routes.Group):monix.eval.Task[org.http4s.Response[monix.eval.Task]]", "kind" : "def"}, {"member" : "com.github.pandafolks.panda.loadbalancer.RandomLoadBalancerImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/pandafolks\/panda\/loadbalancer\/RandomLoadBalancerImpl.html", "kind" : "class"}, {"name" : "com.github.pandafolks.panda.loadbalancer.RoundRobinLoadBalancerImpl", "shortDescription" : "", "members_class" : [{"label" : "route", "tail" : "(request: Request[Task], requestedPath: Path, group: Group): Task[Response[Task]]", "member" : "com.github.pandafolks.panda.loadbalancer.RoundRobinLoadBalancerImpl.route", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#route(request:org.http4s.Request[monix.eval.Task],requestedPath:org.http4s.Uri.Path,group:com.github.pandafolks.panda.routes.Group):monix.eval.Task[org.http4s.Response[monix.eval.Task]]", "kind" : "def"}, {"member" : "com.github.pandafolks.panda.loadbalancer.RoundRobinLoadBalancerImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/pandafolks\/panda\/loadbalancer\/RoundRobinLoadBalancerImpl.html", "kind" : "class"}], "com.github" : []};